<?php

/**
 * This is the model base class for the table "file".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "File".
 *
 * Columns in table "file" available as properties of the model,
 * followed by relations of table "file" available as properties of the model.
 *
 * @property string $id
 * @property string $user_id
 * @property string $name
 * @property string $type
 * @property string $size
 * @property string $description
 * @property string $date_entered
 * @property string $date_updated
 *
 * @property User $user
 * @property Page[] $pages
 */
abstract class BaseFile extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'file';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'File|Files', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('user_id, name, type, size, date_entered', 'required'),
			array('user_id, size', 'length', 'max'=>10),
			array('name', 'length', 'max'=>80),
			array('type', 'length', 'max'=>45),
			array('description, date_updated', 'safe'),
			array('description, date_updated', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, user_id, name, type, size, description, date_entered, date_updated', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'user' => array(self::BELONGS_TO, 'User', 'user_id'),
			'pages' => array(self::MANY_MANY, 'Page', 'page_has_file(file_id, page_id)'),
		);
	}

	public function pivotModels() {
		return array(
			'pages' => 'PageHasFile',
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'user_id' => null,
			'name' => Yii::t('app', 'Name'),
			'type' => Yii::t('app', 'Type'),
			'size' => Yii::t('app', 'Size'),
			'description' => Yii::t('app', 'Description'),
			'date_entered' => Yii::t('app', 'Date Entered'),
			'date_updated' => Yii::t('app', 'Date Updated'),
			'user' => null,
			'pages' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('type', $this->type, true);
		$criteria->compare('size', $this->size, true);
		$criteria->compare('description', $this->description, true);
		$criteria->compare('date_entered', $this->date_entered, true);
		$criteria->compare('date_updated', $this->date_updated, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}