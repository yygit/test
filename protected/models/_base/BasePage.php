<?php

/**
 * This is the model base class for the table "page".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Page".
 *
 * Columns in table "page" available as properties of the model,
 * followed by relations of table "page" available as properties of the model.
 *
 * @property string $id
 * @property string $user_id
 * @property integer $live
 * @property string $title
 * @property string $content
 * @property string $date_updated
 * @property string $date_published
 *
 * @property Comment[] $comments
 * @property User $user
 * @property File[] $files
 */
abstract class BasePage extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'page';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Page|Pages', $n);
	}

	public static function representingColumn() {
		return 'title';
	}

	public function rules() {
		return array(
			array('user_id, title, date_updated', 'required'),
			array('live', 'numerical', 'integerOnly'=>true),
			array('user_id', 'length', 'max'=>10),
			array('title', 'length', 'max'=>100),
			array('content, date_published', 'safe'),
			array('live, content, date_published', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, user_id, live, title, content, date_updated, date_published', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'comments' => array(self::HAS_MANY, 'Comment', 'page_id'),
			'user' => array(self::BELONGS_TO, 'User', 'user_id'),
			'files' => array(self::MANY_MANY, 'File', 'page_has_file(page_id, file_id)'),
		);
	}

	public function pivotModels() {
		return array(
			'files' => 'PageHasFile',
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'user_id' => null,
			'live' => Yii::t('app', 'Live'),
			'title' => Yii::t('app', 'Title'),
			'content' => Yii::t('app', 'Content'),
			'date_updated' => Yii::t('app', 'Date Updated'),
			'date_published' => Yii::t('app', 'Date Published'),
			'comments' => null,
			'user' => null,
			'files' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('live', $this->live);
		$criteria->compare('title', $this->title, true);
		$criteria->compare('content', $this->content, true);
		$criteria->compare('date_updated', $this->date_updated, true);
		$criteria->compare('date_published', $this->date_published, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}